package ZTERmodel;



/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author haseena
 */
//import ZTERmodel.Imageicon;
import view.*;
import ZTERmodel.database;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.sql.*;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;

public class AddMovies extends javax.swing.JFrame {

    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    DefaultTableModel dtm = null;
    

    /**
     * Creates new form AddMovies
     */
    public AddMovies() {
        initComponents();
        populateTable();
       
        tblmoviecollection.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
    
                int selectedRow = tblmoviecollection.getSelectedRow();
                if (selectedRow >= 0) {
         
                    String movieTitle = tblmoviecollection.getValueAt(selectedRow, 0).toString();
                    String genre = tblmoviecollection.getValueAt(selectedRow, 1).toString();
                    String duration = tblmoviecollection.getValueAt(selectedRow, 2).toString();
                    String publishDate = tblmoviecollection.getValueAt(selectedRow, 3).toString();

  
                    lblimg.setText(movieTitle);
                    txtMovieTitle.setText(movieTitle);
                    txtgenre.setText(genre);
                    txtDuration.setText(duration);
                    txtPublishDate.setText(publishDate);
                }
            }
        });
        
        
    }

    private void populateTable() {
        try {
   
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/movie", "root", "0212hk");

 
            String selectSql = "SELECT * FROM movietable";
            PreparedStatement selectStatement = conn.prepareStatement(selectSql);


            ResultSet resultSet = selectStatement.executeQuery();

            DefaultTableModel model = (DefaultTableModel) tblmoviecollection.getModel();
            model.setRowCount(0);

      
            while (resultSet.next()) {
                Object[] rowData = {
                    resultSet.getString("MovieTitle"),
                    resultSet.getString("Genre"),
                    resultSet.getString("Duration"),
                    resultSet.getDate("PublishDate")
                };
                model.addRow(rowData);
            }

            // Close the connection
            conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMovieTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        txtMovieTitle = new javax.swing.JTextField();
        lblGenre = new javax.swing.JLabel();
        txtgenre = new javax.swing.JTextField();
        lblDuration = new javax.swing.JLabel();
        txtDuration = new javax.swing.JTextField();
        txtPublishDate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnInsert = new javax.swing.JButton();
        lblimg = new javax.swing.JLabel();
        img_import = new javax.swing.JButton();
        btninsertandview = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblmoviecollection = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblMovieTitle.setText("MovieTitle");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("MovieTitle  | varchar(100) | YES  |     | NULL    |       |\n| Genre       | varchar(100) | YES  |     | NULL    |       |\n| Duration    | varchar(100) | YES  |     | NULL    |       |\n| image       | varchar(60)  | YES  |     | NULL    |       |\n| PublishDate");
        jScrollPane1.setViewportView(jTextArea1);

        txtMovieTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMovieTitleActionPerformed(evt);
            }
        });

        lblGenre.setText("Genre");

        txtgenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtgenreActionPerformed(evt);
            }
        });

        lblDuration.setText("Duration");

        txtDuration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDurationActionPerformed(evt);
            }
        });

        txtPublishDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPublishDateActionPerformed(evt);
            }
        });

        jLabel4.setText("PublishDate");

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        img_import.setText("Import");
        img_import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                img_importActionPerformed(evt);
            }
        });

        btninsertandview.setText("insert_view");
        btninsertandview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btninsertandviewActionPerformed(evt);
            }
        });

        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        tblmoviecollection.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Movie title", "Genre", "Duration", "Publish Date"
            }
        ));
        jScrollPane3.setViewportView(tblmoviecollection);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(93, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnInsert)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btninsertandview)
                                .addGap(23, 23, 23)
                                .addComponent(btnupdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMovieTitle)
                                    .addComponent(lblGenre)
                                    .addComponent(lblDuration))
                                .addGap(19, 19, 19)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPublishDate, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtgenre, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMovieTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(56, 56, 56))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(lblimg, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(img_import)
                        .addGap(24, 24, 24)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(370, Short.MAX_VALUE)
                                .addComponent(img_import)
                                .addGap(32, 32, 32))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblimg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMovieTitle, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtMovieTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblGenre, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtgenre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDuration, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtDuration, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtPublishDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnInsert)
                                    .addComponent(btninsertandview)
                                    .addComponent(btnupdate))
                                .addContainerGap())
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        try {
            conn = database.dbConn();
            stmt = conn.createStatement();
            String sql = "INSERT INTO movietable (MovieTitle,Genre,Duration,PublishDate) VALUES ('" + txtMovieTitle.getText() + "','" + txtgenre.getText() + "','" + txtDuration.getText() + "','" + txtPublishDate.getText() + "')";
            stmt.executeUpdate(sql);
            System.out.println("Data inserted");
            JOptionPane.showMessageDialog(this, "Message registered", "Teacher", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException e) {
            System.out.println("Error executing SQL: " + e.getMessage());
        } finally {

            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException e) {
                System.out.println("Error closing statement: " + e.getMessage());
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException e) {
                System.out.println("Error closing connection: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void txtPublishDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPublishDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPublishDateActionPerformed

    private void txtDurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDurationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDurationActionPerformed

    private void img_importActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_img_importActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Select an image file");

        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();

            try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/movie", "root", "0212hk")) {

                byte[] imageBytes = Files.readAllBytes(selectedFile.toPath());

                String sql = "INSERT INTO image (image) VALUES (?)";
                PreparedStatement statement = connection.prepareStatement(sql);

                statement.setBytes(1, imageBytes);

                statement.executeUpdate();

                System.out.println("Image imported and stored in the database successfully.");

                ImageIcon imageIcon = new ImageIcon(selectedFile.getAbsolutePath());
                lblimg.setIcon(imageIcon);
            } catch (IOException | SQLException e) {
                e.printStackTrace();
            }
        }


    }//GEN-LAST:event_img_importActionPerformed

    private void txtgenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtgenreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtgenreActionPerformed

    private void txtMovieTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMovieTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMovieTitleActionPerformed

    private void btninsertandviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btninsertandviewActionPerformed
         try {
   
    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/movie", "root", "0212hk");

    stmt=conn.createStatement();
    String insertSql ="INSERT INTO movietable (MovieTitle,Genre,Duration,PublishDate) VALUES ('" + txtMovieTitle.getText() + "','" + txtgenre.getText() + "','" + txtDuration.getText() + "','" + txtPublishDate.getText() + "')";
    stmt.executeUpdate(insertSql);
    SwingUtilities.invokeLater(() -> {
        JOptionPane.showMessageDialog(this, "Data inserted successfully!");
    });

   
    String selectSql = "SELECT * FROM movietable";
    PreparedStatement selectStatement = conn.prepareStatement(selectSql);

   
    ResultSet resultSet = selectStatement.executeQuery();

    DefaultTableModel model = (DefaultTableModel) tblmoviecollection.getModel();
    model.setRowCount(0);


   while (resultSet.next()) {
    Object[] rowData = {
        resultSet.getString("MovieTitle"),
        resultSet.getString("Genre"),
        resultSet.getString("Duration"),
        resultSet.getDate("PublishDate")
    };
    model.addRow(rowData);
}
    conn.close();
} catch (SQLException ex) {
    ex.printStackTrace();
}

    }//GEN-LAST:event_btninsertandviewActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed

        int selectedRow = tblmoviecollection.getSelectedRow();
        if (selectedRow >= 0) {
          
            int confirm = JOptionPane.showConfirmDialog(this, "Do you want to make changes?");
            if (confirm == JOptionPane.YES_OPTION) {
                // Retrieve the updated values from the text fields
                String updatedMovieTitle = txtMovieTitle.getText();
                String updatedGenre = txtgenre.getText();
                String updatedDuration = txtDuration.getText();
                String updatedPublishDate = txtPublishDate.getText();

                // Update the table with the new values
                tblmoviecollection.setValueAt(updatedMovieTitle, selectedRow, 0);
                tblmoviecollection.setValueAt(updatedGenre, selectedRow, 1);
                tblmoviecollection.setValueAt(updatedDuration, selectedRow, 2);
                tblmoviecollection.setValueAt(updatedPublishDate, selectedRow, 3);

                try {
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/movie", "root", "0212hk");
                String updateSql = "UPDATE movietable SET MovieTitle=?, Genre=?, Duration=?, PublishDate=? WHERE MovieTitle=?";
                PreparedStatement updateStatement = conn.prepareStatement(updateSql);
                updateStatement.setString(1, updatedMovieTitle);
                updateStatement.setString(2, updatedGenre);
                updateStatement.setString(3, updatedDuration);
                updateStatement.setString(4, updatedPublishDate);
                updateStatement.setString(5, updatedMovieTitle); 
                updateStatement.executeUpdate();

                conn.close();
                JOptionPane.showMessageDialog(this, "Successfully made changes");
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error updating data");
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "No row selected");
    }
    }//GEN-LAST:event_btnupdateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])  {
//     
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddMovies().setVisible(true);

            }
        });
    }
    
public void Moviedetail() {
    DefaultTableModel dtm = (DefaultTableModel) tblmoviecollection.getModel();
    dtm.setRowCount(0);
    Connection conn = null;
    Statement st = null;
    ResultSet rs = null;
    try {
        conn = database.dbConn(); 
        st = conn.createStatement();
        rs = st.executeQuery("SELECT column1, column2, column3, column4 FROM your_table_name");
        while (rs.next()) {
            dtm.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)});
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(rootPane, e.getMessage());
    } finally {
        try {
            if (rs != null) {
                rs.close();
            }
            if (st != null) {
                st.close();
            }
            if (conn != null) {
                conn.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}





    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btninsertandview;
    private javax.swing.JButton btnupdate;
    private javax.swing.JButton img_import;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblDuration;
    private javax.swing.JLabel lblGenre;
    private javax.swing.JLabel lblMovieTitle;
    private javax.swing.JLabel lblimg;
    private javax.swing.JTable tblmoviecollection;
    private javax.swing.JTextField txtDuration;
    private javax.swing.JTextField txtMovieTitle;
    private javax.swing.JTextField txtPublishDate;
    private javax.swing.JTextField txtgenre;
    // End of variables declaration//GEN-END:variables
}
